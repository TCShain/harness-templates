pipeline:
  name: deploy-a-bucket
  identifier: deployabucket
  projectIdentifier: sampleproject1
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: deploy s3 bucket
        identifier: deploy_s3_bucket
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - stepGroup:
                  name: Terrform APPLY
                  identifier: Terrform_APPLY
                  steps:
                    - step:
                        type: TerraformPlan
                        name: TF Apply Plan
                        identifier: TF_Plan
                        spec:
                          provisionerIdentifier: s3_bucket_deploy
                          configuration:
                            command: Apply
                            configFiles:
                              store:
                                spec:
                                  connectorRef: account.TCShain_GitHub
                                  repoName: harness-templates
                                  gitFetchType: Branch
                                  branch: tf-pipeline-demo
                                  folderPath: aws/terraform/<+stage.variables.tf_infra_type>
                                type: Github
                            varFiles:
                              - varFile:
                                  spec:
                                    content: |
                                      aws_access_key = "AKIAYMVTY65Q675WRUWN"
                                      aws_secret_key = "<+secrets.getValue("account.control_aws_secret_key")>"
                                      region         = "<+stage.variables.aws_region>"
                                  identifier: tf_provider_creds
                                  type: Inline
                              - varFile:
                                  type: Remote
                                  identifier: default vars
                                  spec:
                                    store:
                                      type: Github
                                      spec:
                                        gitFetchType: Branch
                                        repoName: harness-templates
                                        branch: tf-pipeline-demo
                                        paths:
                                          - terraform/aws/default.tfvars
                                        connectorRef: account.TCShain_GitHub
                            secretManagerRef: harnessSecretManager
                            skipRefreshCommand: false
                        timeout: 10m
                    - step:
                        type: HarnessApproval
                        name: Approval
                        identifier: Approval
                        spec:
                          approvalMessage: Please review the following information and approve the pipeline progression
                          includePipelineExecutionHistory: true
                          approvers:
                            userGroups:
                              - account.Admins
                            minimumCount: 1
                            disallowPipelineExecutor: false
                          approverInputs: []
                        timeout: 1d
                    - step:
                        type: TerraformApply
                        name: Terraform Apply
                        identifier: Terraform_Apply
                        spec:
                          provisionerIdentifier: s3_bucket_deploy
                          configuration:
                            type: InheritFromPlan
                        timeout: 10m
                  when:
                    stageStatus: Success
                    condition: <+stage.variables.tf_destroy> != true
                  failureStrategies: []
                  spec: {}
              - stepGroup:
                  name: Terraform DESTROY
                  identifier: Terraform_DESTROY
                  steps:
                    - step:
                        type: TerraformPlan
                        name: TF Destroy Plan
                        identifier: TF_Destroy_Plan
                        spec:
                          configuration:
                            command: Destroy
                            configFiles:
                              store:
                                spec:
                                  connectorRef: account.TCShain_GitHub
                                  repoName: harness-templates
                                  gitFetchType: Branch
                                  branch: tf-pipeline-demo
                                  folderPath: aws/terraform/<+stage.variables.tf_infra_type>
                                type: Github
                            varFiles:
                              - varFile:
                                  type: Remote
                                  identifier: default variables
                                  spec:
                                    store:
                                      type: Github
                                      spec:
                                        gitFetchType: Branch
                                        repoName: harness-templates
                                        branch: tf-pipeline-demo
                                        paths:
                                          - aws/terraform/default.tfvars
                                        connectorRef: account.TCShain_GitHub
                            secretManagerRef: account.harnessSecretManager
                            skipRefreshCommand: false
                          provisionerIdentifier: s3_bucket_deploy
                        timeout: 10m
                    - step:
                        type: HarnessApproval
                        name: Destroy Approval
                        identifier: Destroy_Approval
                        spec:
                          approvalMessage: Please review the following information and approve the pipeline progression
                          includePipelineExecutionHistory: true
                          approvers:
                            userGroups:
                              - account.Admins
                            minimumCount: 1
                            disallowPipelineExecutor: false
                          approverInputs: []
                        timeout: 1d
                    - step:
                        type: TerraformDestroy
                        name: TF Destroy
                        identifier: TF_Destroy
                        spec:
                          provisionerIdentifier: s3_bucket_deply
                          configuration:
                            type: InheritFromPlan
                        timeout: 10m
                  when:
                    stageStatus: Success
                    condition: <+stage.variables.tf_destroy> == true
                  failureStrategies: []
                  spec: {}
        tags: {}
        variables:
          - name: aws_region
            type: String
            description: ""
            value: us-east-1
          - name: tf_destroy
            type: String
            default: "false"
            description: ""
            value: <+input>.allowedValues(false,true)
          - name: tf_infra_type
            type: String
            description: ""
            value: <+input>.allowedValues(ecs,lambda,s3,tfstate)
